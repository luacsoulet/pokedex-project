const r=[{is:e=>e===void 0,match:e=>e==="!undefined",serialize:()=>"!undefined",deserialize:()=>{}},{is:e=>e===1/0,match:e=>e==="!Infinity",serialize:()=>"!Infinity",deserialize:()=>1/0},{is:e=>e===-1/0,match:e=>e==="!-Infinity",serialize:()=>"!-Infinity",deserialize:()=>-1/0},{is:e=>typeof e=="number"&&isNaN(e),match:e=>e==="!NaN",serialize:()=>"!NaN",deserialize:()=>NaN},{is:e=>e instanceof Date,match:e=>e.startsWith("!Date:"),serialize:e=>"!Date:"+e.toISOString(),deserialize:e=>new Date(e.slice(6))},{is:e=>typeof e=="bigint",match:e=>e.startsWith("!BigInt:"),serialize:e=>"!BigInt:"+e.toString(),deserialize:e=>{if(typeof BigInt>"u")throw new Error("Your JavaScript environement does not support BigInt. Consider adding a polyfill.");return BigInt(e.slice(8))}},{is:e=>e instanceof RegExp,match:e=>e.startsWith("!RegExp:"),serialize:e=>"!RegExp:"+e.toString(),deserialize:e=>{e=e.slice(8);const i=e.match(/\/(.*)\/(.*)?/),t=i[1],s=i[2];return new RegExp(t,s)}},{is:e=>e instanceof Map,match:e=>e.startsWith("!Map:"),serialize:(e,i)=>"!Map:"+i(Array.from(e.entries())),deserialize:(e,i)=>new Map(i(e.slice(5)))},{is:e=>e instanceof Set,match:e=>e.startsWith("!Set:"),serialize:(e,i)=>"!Set:"+i(Array.from(e.values())),deserialize:(e,i)=>new Set(i(e.slice(5)))},{is:e=>typeof e=="string"&&e.startsWith("!"),match:e=>e.startsWith("!"),serialize:e=>"!"+e,deserialize:e=>e.slice(1)}];function a(e){const i=JSON.parse(e);return n(i)}function n(e){return typeof e=="string"?o(e):(typeof e=="object"&&e!==null&&Object.entries(e).forEach(([i,t])=>{e[i]=n(t)}),e)}function o(e){for(const{match:i,deserialize:t}of r)if(i(e))return t(e,a);return e}export{n as a,a as p,r as t};
